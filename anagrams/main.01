#include <iostream>
#include <vector>
#include <string>
#include <unordered_map>
#include <functional>
#include <cstdlib>
#include "dan.h"

using namespace std;

class Solution {
	vector<int> getCharCount(string &s) {
		vector<int> result(26, 0);
		for (auto &x: s)
			result[x-'a']++;

		return result;
	}

	struct charCountHash {
		size_t operator() (const vector<int> &cnt) const {
			size_t ret = 0;
			hash<int> h;

			for (auto &x: cnt)
				ret += h(x);

			return ret;
		}
	};

	struct charCountEqual {
		bool operator () (const vector<int> &v1, const vector<int> &v2) const {
			if (v1.size() != v2.size())
				return false;

			for (int i=0; i<(int)v1.size(); i++)
				if (v1[i] != v2[i])
					return false;

			return true;
		}
	};

	public:
	vector<vector<string> > anagrams(vector<string> &strs) {
		unordered_map<vector<int>, vector<string>, charCountHash, charCountEqual > group;

		for (int i=0; i<(int)strs.size(); i++) {
			vector<int> cnt = getCharCount(strs[i]);

			if (group.find(cnt) == group.end())
				group.insert(make_pair(cnt, vector<string>(1, strs[i])));
			else
				group[cnt].push_back(strs[i]);
		}

		vector<vector<string> > result;

		for (auto &x: group)
			result.push_back(x.second);

		return result;
	}
};

int main() {
	vector<string> strs;
	string s;

	while (cin >> s)
		strs.push_back(s);

	Solution sol;

	cout << sol.anagrams(strs) << endl;

	return 0;
}
