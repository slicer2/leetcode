#include <iostream>
#include <string>
#include <cstdlib>


using namespace std;

class Solution {
	int *memoized;

	bool can(int A[], int start, int n) {
		//cerr << "start = " << start << endl;

		switch (memoized[start]) {
			case 0:
				return false;
			case 1:
				return true;
		}

		for (int i=1; i<= A[start]; i++) {
			if (start+i < n) {
				if (can(A, start+i, n)) {
					memoized[start] = 1;
					return true;
				}
			}
			else
				break;
		}

		memoized[start] = 0; 
		return false;
	}

	public:

	bool canJump(int A[], int n) {
		memoized = new int [n];
		for (int i=0; i<n; i++)
			memoized[i] = -1;

		memoized[n-1] = 1;

		
		return can(A, 0, n);
	}

};

int main() {
	int num;
	int n = 0;
	int *A = new int [30000];

	while (cin >> num) {
		A[n++] = num;
	}

	Solution sol;


	if (sol.canJump(A, n))
		cout << "yes" << endl;
	else
		cout << "no" << endl;

	return 0;
}
